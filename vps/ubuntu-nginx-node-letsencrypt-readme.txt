Setup steps for ubuntu VPS with node app over https with ssl cert generated by letsencrypt and nginx as reverse proxy to node


1) add new user:

adduser bary
usermod -aG sudo bary
id bary


2) add ssh key
su - bary
mkdir ~/.ssh
chmod 700 .ssh

touch .ssh/authorized_keys
put ssh key inside

chmod 600 .ssh/authorized_keys


3) change sshd settings
after relogin as bary:
sudo vim /etc/ssh/sshd_config

change: PermitRootLogin yes
to: PermitRootLogin no

chane: #PasswordAuthentication yes
to: PasswordAuthentication no

sudo systemctl reload sshd


4) setup basic firewall (uncomplicated firewall)
sudo ufw allow OpenSSH
sudo ufw allow http
sudo ufw allow https

sudo ufw enable
sudo ufw status


5) setup software

sudo apt-get install git

FIX ubuntu apt-get node version:
curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -

sudo apt-get install nodejs


6) clone some node app es:
https://github.com/jlengstorf/tutorial-deploy-nodejs-ssl-digitalocean-app/


7) install node pm2 (process manager)
sudo npm install -g pm2

start app by typing:
pm2 start index.js


8) add pm2 to systemd (it will restart automatically)
pm2 startup systemd
[PM2] You have to run this command as root. Execute the following command:
      sudo su -c "env PATH=$PATH:/usr/bin pm2 startup systemd -u bary --hp /home/bary"


9) install letsencryppt to get SSL cert
sudo apt-get install bc

sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt

cd /opt/letsencrypt:
./letsencrypt-auto certonly --standalone


IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/node.roznowski.pl/fullchain.pem. Your cert
   will expire on 2017-02-09. To obtain a new or tweaked version of
   this certificate in the future, simply run letsencrypt-auto again.
   To non-interactively renew *all* of your certificates, run
   "letsencrypt-auto renew"
 - If you lose your account credentials, you can recover through
   e-mails sent to xxxxxxxx.xxxxxxxxx@xxxx.xxx.
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le



For renewal:
./letsencrypt-auto renew


add auto renewal to cron:
sudo crontab -e
00 1 * * 1 /opt/letsencrypt/letsencrypt-auto renew >> /var/log/letsencrypt-renewal.log
30 1 * * 1 /bin/systemctl reload nginx


10) use nginx as reverse proxy
sudo apt-get install nginx

generate dhparam for better ssl score security:

sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

go to:
https://cipherli.st/

copy nginx conf to /etc/nginx/snippets/ssl-params.conf
and change dns resolvers to google 8.8.8.8 and 8.8.4.4 dns resolvers

and add at the end dhparam just created:
ssl_dhparam /etc/ssl/certs/dhparam.pem;



Edit: NGINX conf: /etc/nginx/sites-enabled/default

sudo vim /etc/nginx/sites-enabled/default
[...]
# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name node.roznowski.pl;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/node.roznowski.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/node.roznowski.pl/privkey.pem;

    # Include the SSL configuration from cipherli.st
    include snippets/ssl-params.conf;

    # Reverse proxy
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:5000/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}
[...]


11) test nginx settings
sudo nginx -t

12) start nginx
sudo systemctl stop nginx
sudo systemctl start nginx

13) check security at:
https://www.ssllabs.com/ssltest/analyze.html?d=roznowski.pl
